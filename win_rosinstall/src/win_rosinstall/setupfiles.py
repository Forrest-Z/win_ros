# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Yujin Robot, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#  * Neither the name of Yujin Robot nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import sys
import os
import rosinstall
from rosinstall.helpers import ROSInstallException, get_ros_stack_path, get_ros_package_path
 
def generate_setup_bat_text(base_path, ros_root, ros_package_path):
    # overlay or standard
    text =  """
REM This is a file auto-generated by rosinstall for windows
REM refer to http://www.ros.org/wiki/win_rosinstall
REM for more information.
"""
    pythonhome = sys.exec_prefix
    pythonscripts = os.path.join(pythonhome,'Scripts')
    pythonpath = os.path.join(ros_root,'core')
    pythonpath = os.path.join(ros_root,'core','roslib','src')
    ros_root_bin = os.path.join(ros_root,'bin')
    visual_studio_ten_env=r'C:\Program Files\Microsoft Visual Studio 10.0\VC\vcvarsall.bat';
    windows_sdk_env=r'C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd';
    
    text += "\n"
    text += "ECHO OFF\n"
    text += "\n"
    text += "set PYTHONHOME=%s\n"%pythonhome
    text += "set PYTHONPATH=%s\n"%pythonpath
    text += "set PATH=%s"%pythonscripts+os.pathsep+"%PATH%\n" 
    text += "\n"
    text += "set ROS_ROOT=%s\n" % ros_root
    text += "set ROS_PACKAGE_PATH=%s\n" % ros_package_path
    text += "set ROS_WORKSPACE=%s\n" % base_path
    text += "set PATH=%s"%ros_root_bin+os.pathsep+"%PATH%\n" 
    text += "\n"
    text += "set ROS_MASTER_URI=http://localhost:11311\n"
    text += "REM set ROS_IP=192.168.10.231\n"
    text += "REM set ROS_HOSTNAME=concert_master\n"
    text += "\n"
    text += "REM Utility variables - need to search for these better (PROGRAMFILES is unreliable depending on your shell)\n"
    text += 'doskey wordpad="'+os.environ['PROGRAMFILES']+'\\Windows NT\\Accessories\\wordpad.exe" $1\n'
    text += 'doskey notepp="'+os.environ['PROGRAMFILES']+'\\Notepad++\\notepad++.exe" $1\n'
    text += "REM This isn't fully supported yet\n"
    text += 'REM doskey roscd=%s\\win_ros\\win_roscd\\roscd.bat $1\n'%base_path
    text += "\n"
    if os.path.isfile(visual_studio_ten_env):
        text += "REM Environment settings for Visual Studio\n"
        text += 'call "' + visual_studio_ten_env + '" x86 Debug\n'
    elif os.path.isfile(windows_sdk_env):
        text += "REM Environment settings for your compiler [Windows SDK/Visual Studio]\n"
        text += 'call "' + windows_sdk_env + '" x86 Debug\n'
    else:
        text += "REM Could not find windows sdk or visual studio, please configure by hand\n"
        text += 'REM "' + visual_studio_ten_env + '" x86 Debug\n'
        text += 'REM call "' + windows_sdk_env + '" x86 Debug\n'
    text += "\n"
    return text

def generate_setup(config):
    base_path = config.get_base_path()
    ros_root = rosinstall.helpers.get_ros_stack_path(config)
    if not ros_root:
        raise ROSInstallException("No 'ros' stack detected in %s."%config)
    ros_package_path = rosinstall.helpers.get_ros_package_path(config)

    text = generate_setup_bat_text(base_path, ros_root, ros_package_path)
    setup_path = os.path.join(config.get_base_path(), 'setup.bat')
    with open(setup_path, 'w') as f:
        f.write(text)
