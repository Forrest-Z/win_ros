diff -NBaur -x .hg rospack/CMakeLists.txt rospack_mods/CMakeLists.txt
--- rospack/CMakeLists.txt	Thu May  3 18:27:02 2012
+++ rospack_mods/CMakeLists.txt	Thu May  3 18:17:35 2012
@@ -14,7 +14,7 @@
   message(STATUS "Rospack building shared objects.")
 else()
   message(STATUS "Rospack building static objects.")
-  add_definitions(-DROS_BUILD_STATIC_LIBS) # tinyxml.h:86
+  add_definitions(-DROS_BUILD_STATIC_LIBS) # tinyxml.h:86,  macros.h
 endif()
 
 add_definitions(-Wall)
diff -NBaur -x .hg rospack/include/rospack/macros.h rospack_mods/include/rospack/macros.h
--- rospack/include/rospack/macros.h	Thu Jan  1 09:00:00 1970
+++ rospack_mods/include/rospack/macros.h	Thu May  3 18:17:54 2012
@@ -0,0 +1,70 @@
+/*
+ * Copyright (C) 2008, Willow Garage, Inc.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *   * Redistributions of source code must retain the above copyright notice,
+ *     this list of conditions and the following disclaimer.
+ *   * Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ *   * Neither the names of Stanford University or Willow Garage, Inc. nor the names of its
+ *     contributors may be used to endorse or promote products derived from
+ *     this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef ROSPACK_MACROS_H_
+#define ROSPACK_MACROS_H_
+
+/*
+ * Windows macros for dll exports
+ *
+ * This replicates what ros has in roscpp_core/cpp_common/macros.h
+ * so rospack can be standalone.
+ *
+ * See also http://gcc.gnu.org/wiki/Visibility
+ */
+
+#if defined(_MSC_VER)
+    #define ROS_HELPER_IMPORT __declspec(dllimport)
+    #define ROS_HELPER_EXPORT __declspec(dllexport)
+    #define ROS_HELPER_LOCAL
+#elif __GNUC__ >= 4
+    #define ROS_HELPER_IMPORT __attribute__ ((visibility("default")))
+    #define ROS_HELPER_EXPORT __attribute__ ((visibility("default")))
+    #define ROS_HELPER_LOCAL  __attribute__ ((visibility("hidden")))
+#else
+    #define ROS_HELPER_IMPORT
+    #define ROS_HELPER_EXPORT
+    #define ROS_HELPER_LOCAL
+#endif
+
+// Ignore warnings about import/exports when deriving from std classes.
+#ifdef _MSC_VER
+  #pragma warning(disable: 4251)
+  #pragma warning(disable: 4275)
+#endif
+
+#ifdef ROS_BUILD_STATIC_LIBS // ros is being built around shared libraries
+  #define ROSPACK_DECL
+#else // ros is being built around shared libraries
+  #ifdef rospack_EXPORTS // we are building a shared lib/dll
+    #define ROSPACK_DECL ROS_HELPER_EXPORT
+  #else // we are using shared lib/dll
+    #define ROSPACK_DECL ROS_HELPER_IMPORT
+  #endif
+#endif
+
+#endif /* ROSPACK_MACROS_H_ */
diff -NBaur -x .hg rospack/include/rospack/rospack.h rospack_mods/include/rospack/rospack.h
--- rospack/include/rospack/rospack.h	Thu May  3 18:27:02 2012
+++ rospack_mods/include/rospack/rospack.h	Thu May  3 18:20:28 2012
@@ -111,6 +111,7 @@
 #include <vector>
 #include <set>
 #include <list>
+#include "macros.h"
 
 //#ifdef ROSPACK_API_BACKCOMPAT_V1
 #if 1 // def ROSPACK_API_BACKCOMPAT_V1
@@ -136,7 +137,7 @@
  * use the functionality provided here through one of the derived classes,
  * Rosstack or Rospack.
  */
-class Rosstackage
+class ROSPACK_DECL Rosstackage
 {
   private:
     std::string manifest_name_;
@@ -485,7 +486,7 @@
  * @brief Package crawler.  Create one of these to operate on a package
  * tree.  Call public methods inherited from Rosstackage.
  */
-class Rospack : public Rosstackage
+class ROSPACK_DECL Rospack : public Rosstackage
 {
   public:
     /**
@@ -503,7 +504,7 @@
  * @brief Stack crawler.  Create one of these to operate on a stack
  * tree.  Call public methods inherited from Rosstackage.
  */
-class Rosstack : public Rosstackage
+class ROSPACK_DECL Rosstack : public Rosstackage
 {
   public:
     /**
diff -NBaur -x .hg rospack/include/rospack/rospack_backcompat.h rospack_mods/include/rospack/rospack_backcompat.h
--- rospack/include/rospack/rospack_backcompat.h	Thu May  3 18:27:02 2012
+++ rospack_mods/include/rospack/rospack_backcompat.h	Thu May  3 18:20:17 2012
@@ -30,6 +30,7 @@
 #define ROSPACK_ROSPACK_BACKCOMPAT_H
 
 #include <string>
+#include "macros.h"
 
 namespace rospack
 {
@@ -38,7 +39,7 @@
  * @brief Backward compatibility API for librospack (DEPRECATED).
  * @deprecated Used by roslib.  Don't use in new code.
  */
-class ROSPack
+class ROSPACK_DECL ROSPack
 {
   private:
     std::string output_;
diff -NBaur -x .hg rospack/src/rospack.cpp rospack_mods/src/rospack.cpp
--- rospack/src/rospack.cpp	Thu May  3 18:27:02 2012
+++ rospack_mods/src/rospack.cpp	Thu May  3 17:21:04 2012
@@ -36,14 +36,20 @@
 #if defined(WIN32)
   #include <windows.h>
   #include <direct.h>
-  #include <libgen.h> // for dirname
   #include <fcntl.h>  // for O_RDWR, O_EXCL, O_CREAT
-#else //!defined(WIN32)
-  #include <sys/types.h>
-  #include <libgen.h>
-  #include <pwd.h>
-  #include <unistd.h>
-  #include <sys/time.h>
+  // simple workaround - could have issues though. See
+  //   http://stackoverflow.com/questions/2915672/snprintf-and-visual-studio-2010
+  // for potentially better solutions. Similar probably applies for some of the others
+  #define snprintf _snprintf
+  #define pclose _pclose
+  #define popen _popen
+  #define PATH_MAX MAX_PATH
+  #if defined(__MINGW32__)
+    #include <libgen.h> // for dirname
+  #endif
+  #if defined(_MSC_VER)
+    #include <io.h> // _mktemp_s
+  #endif
 #endif
 
 #include <climits>
diff -NBaur -x .hg rospack/src/rospack_cmdline.h rospack_mods/src/rospack_cmdline.h
--- rospack/src/rospack_cmdline.h	Thu May  3 18:27:02 2012
+++ rospack_mods/src/rospack_cmdline.h	Thu May  3 18:25:17 2012
@@ -33,7 +33,7 @@
 namespace rospack
 {
 
-bool rospack_run(int argc, char** argv, 
+bool rospack_run(int argc, char** argv,
                  rospack::Rosstackage& rp, 
                  std::string& output);
 
